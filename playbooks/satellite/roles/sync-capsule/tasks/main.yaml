---
    # - shell: |
    #     y=("{{ CAPSULES }}"); g=("${!y[@]}"); res=`expr ${g[-1]} + 1`; echo $res
    #   register: numcapsules

    # - shell: |
    #     capid=`expr {{ item }} + 1`
    #     hammer -u "{{ sat_user }}" -p "{{ sat_pass }}" capsule content \
    #       add-lifecycle-environment --environment-id 1 --id "$capid"
    #   with_sequence: start=1 end={{ numcapsules.stdout }} stride=1
    #   when: sync_capsule_conc == true

    - shell: |
        capid=`expr {{ item }} + 1`
        hammer -u "{{ sat_user }}" -p "{{ sat_pass }}" capsule content \
          add-lifecycle-environment --environment-id 1 --id "$capid"
      with_sequence: start=1 end={{ NUM_CAPSULES }} stride=1
      when: sync_capsule_conc == true

    # - shell: |
    #     ssh -o {{ SSH_OPTS }} root@{{ item }} "pbench-clear-results; pbench-clear-tools; pbench-kill-tools"
    #   with_indexed_items: "{{ CAPSULES }}"
    #   when: sync_capsule_conc == true

    # - shell: |
    #     pbench-register-tool-set
    #   when: sync_capsule_conc == true

    # - shell: |
    #     ssh -o {{ SSH_OPTS }} root@{{ item }} "register-tool-set"
    #   with_indexed_items: "{{ CAPSULES }}"
    #   when: sync_capsule_conc == true

    - shell: |
        pbench-user-benchmark
          --config={{ CONFIG_NAME }}-capsule-sync-concurrent
          -- "./scripts/sync_capsules.sh {{ NUM_CAPSULES }} {{ CONFIG_NAME }}"
      when: sync_capsule_conc == true

    # - shell: |
    #     pbench-user-benchmark
    #       --config={{ CONFIG_NAME }}-capsule-sync-concurrent
    #       -- "./scripts/sync_capsules.sh {{ NUM_CAPSULES }} {{ CONFIG_NAME }}"
    #   when: sync_capsule_conc == true
    - shell: |
        echo "----------------------------------"
        sleep 5
        # Perform Sync and time results
        for numcap in `seq 1 {{ NUM_CAPSULES }}`; do
          capid=`expr ${numcap} + 1`
          echo "[$(date -R)] Starting Capsule Synchronize: ${numcap}"
          time hammer -u admin -p changeme capsule content synchronize --id ${capid} >> "{{ CONFIG_NAME }}".${capid} 2>&1  &
        done
        echo "[$(date -R)] Waiting for Sync to finish on Capsules"
        wait
        echo "[$(date -R)] Syncs finished on Capsules"
        sleep 5
        for numcap in `seq 1 {{ NUM_CAPSULES }}`; do
          capid=`expr ${numcap} + 1`
          echo "[$(date -R)] SCP sync latency to ."
          echo "[$(date -R)] Real Timing:"
          tail -n 3 "{{ CONFIG_NAME }}".${capid}  | awk '{split($2, mtos,"m");split(mtos[2], seconds, "s");  total = (mtos[1] * 60) + seconds[1]; if (total != 0) {print $1 ", " total }}'
        done
        echo "----------------------------------"
      when: sync_capsule_conc == true

    - shell: |
        capid=`expr {{ item }} + 1`;
        hammer -u "{{ sat_user }}" -p "{{ sat_pass }}" capsule content \
          remove-lifecycle-environment --environment-id 1 --id "${capid}"
      with_sequence: start=1 end={{ NUM_CAPSULES }} stride=1
      when: sync_capsule_conc == true

    # - shell: |
    #      pbench-clear-tools; pbench-kill-tools
    #   when: sync_capsule_conc == true

    # - shell: |
    #     ssh -o {{ SSH_OPTS }} root@{{ item }} "pbench-clear-results; pbench-clear-tools; pbench-kill-tools"
    #   with_indexed_items: "{{ CAPSULES }}"
    #   when: sync_capsule_conc == true
...
